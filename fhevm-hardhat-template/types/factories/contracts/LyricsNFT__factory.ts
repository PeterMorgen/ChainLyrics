/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { LyricsNFT, LyricsNFTInterface } from "../../contracts/LyricsNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "songId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "finalVersionCID",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "contributors",
            type: "address[]",
          },
          {
            internalType: "uint64",
            name: "mintedAt",
            type: "uint64",
          },
        ],
        internalType: "struct LyricsNFT.Metadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "finalVersionCID",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "contributors",
        type: "address[]",
      },
    ],
    name: "mintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600755348015610014575f5ffd5b50336040518060400160405280600b81526020016a436861696e4c797269637360a81b8152506040518060400160405280600481526020016321a62ca960e11b815250815f9081610065919061019a565b506001610072828261019a565b5050506001600160a01b0381166100a257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100ab816100b1565b50610254565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061012a57607f821691505b60208210810361014857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561019557805f5260205f20601f840160051c810160208510156101735750805b601f840160051c820191505b81811015610192575f815560010161017f565b50505b505050565b81516001600160401b038111156101b3576101b3610102565b6101c7816101c18454610116565b8461014e565b6020601f8211600181146101f9575f83156101e25750848201515b5f19600385901b1c1916600184901b178455610192565b5f84815260208120601f198516915b828110156102285787850151825560209485019460019092019101610208565b508482101561024557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b611841806102615f395ff3fe608060405234801561000f575f5ffd5b506004361061012f575f3560e01c80638da5cb5b116100ad578063af2e1f411161007d578063c87b56dd11610063578063c87b56dd14610284578063e985e9c514610297578063f2fde38b146102d2575f5ffd5b8063af2e1f411461025e578063b88d4fde14610271575f5ffd5b80638da5cb5b1461021257806395d89b4114610223578063a22cb4651461022b578063a574cea41461023e575f5ffd5b806323b872dd116101025780636352211e116100e85780636352211e146101d657806370a08231146101e9578063715018a61461020a575f5ffd5b806323b872dd146101b057806342842e0e146101c3575f5ffd5b806301ffc9a71461013357806306fdde031461015b578063081812fc14610170578063095ea7b31461019b575b5f5ffd5b610146610141366004611210565b6102e5565b60405190151581526020015b60405180910390f35b610163610336565b6040516101529190611259565b61018361017e36600461126b565b6103c5565b6040516001600160a01b039091168152602001610152565b6101ae6101a936600461129d565b6103ec565b005b6101ae6101be3660046112c5565b6103fb565b6101ae6101d13660046112c5565b610489565b6101836101e436600461126b565b6104a8565b6101fc6101f73660046112ff565b6104b2565b604051908152602001610152565b6101ae6104f7565b6006546001600160a01b0316610183565b61016361050a565b6101ae610239366004611318565b610519565b61025161024c36600461126b565b610524565b6040516101529190611351565b6101fc61026c366004611449565b610782565b6101ae61027f366004611545565b61092b565b61016361029236600461126b565b610943565b6101466102a5366004611622565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b6101ae6102e03660046112ff565b6109b4565b5f6001600160e01b031982166380ac58cd60e01b148061031557506001600160e01b03198216635b5e139f60e01b145b8061033057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461034490611653565b80601f016020809104026020016040519081016040528092919081815260200182805461037090611653565b80156103bb5780601f10610392576101008083540402835291602001916103bb565b820191905f5260205f20905b81548152906001019060200180831161039e57829003601f168201915b5050505050905090565b5f6103cf826109f1565b505f828152600460205260409020546001600160a01b0316610330565b6103f7828233610a29565b5050565b6001600160a01b03821661042957604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f610435838333610a36565b9050836001600160a01b0316816001600160a01b031614610483576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610420565b50505050565b6104a383838360405180602001604052805f81525061092b565b505050565b5f610330826109f1565b5f6001600160a01b0382166104dc576040516322718ad960e21b81525f6004820152602401610420565b506001600160a01b03165f9081526003602052604090205490565b6104ff610b28565b6105085f610b55565b565b60606001805461034490611653565b6103f7338383610ba6565b61055e6040518060a001604052805f81526020016060815260200160608152602001606081526020015f67ffffffffffffffff1681525090565b5f828152600260205260409020546001600160a01b03166105c15760405162461bcd60e51b815260206004820152600b60248201527f62616420746f6b656e49640000000000000000000000000000000000000000006044820152606401610420565b60085f8381526020019081526020015f206040518060a00160405290815f82015481526020016001820180546105f690611653565b80601f016020809104026020016040519081016040528092919081815260200182805461062290611653565b801561066d5780601f106106445761010080835404028352916020019161066d565b820191905f5260205f20905b81548152906001019060200180831161065057829003601f168201915b5050505050815260200160028201805461068690611653565b80601f01602080910402602001604051908101604052809291908181526020018280546106b290611653565b80156106fd5780601f106106d4576101008083540402835291602001916106fd565b820191905f5260205f20905b8154815290600101906020018083116106e057829003601f168201915b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561075d57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161073f575b50505091835250506004919091015467ffffffffffffffff1660209091015292915050565b5f61078b610b28565b60078054905f61079a8361168b565b9190505590506107aa8982610c44565b6040518060a0016040528089815260200188888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505090825250604080516020601f8901819004810282018101909252878152918101919088908890819084018382808284375f9201919091525050509082525060408051602086810282810182019093528682529283019290918791879182918501908490808284375f92018290525093855250505067ffffffffffffffff421660209283015283815260088252604090208251815590820151600182019061089690826116f3565b50604082015160028201906108ab90826116f3565b50606082015180516108c7916003840191602090910190611184565b50608091909101516004909101805467ffffffffffffffff191667ffffffffffffffff909216919091179055604051889082907f8a9dcf4e150b1153011b29fec302d5be0c13e84fa8f56ab78587f778a32a90dd905f90a398975050505050505050565b6109368484846103fb565b6104833385858585610c5d565b606061094e826109f1565b505f61096460408051602081019091525f815290565b90505f8151116109825760405180602001604052805f8152506109ad565b8061098c84610d85565b60405160200161099d9291906117c5565b6040516020818303038152906040525b9392505050565b6109bc610b28565b6001600160a01b0381166109e557604051631e4fbdf760e01b81525f6004820152602401610420565b6109ee81610b55565b50565b5f818152600260205260408120546001600160a01b03168061033057604051637e27328960e01b815260048101849052602401610420565b6104a38383836001610e22565b5f828152600260205260408120546001600160a01b0390811690831615610a6257610a62818486610f44565b6001600160a01b03811615610a9c57610a7d5f855f5f610e22565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615610aca576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146105085760405163118cdaa760e01b8152336004820152602401610420565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216610bd857604051630b61174360e31b81526001600160a01b0383166004820152602401610420565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6103f7828260405180602001604052805f815250610fa8565b6001600160a01b0383163b15610d7e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610c9f9088908890879087906004016117d9565b6020604051808303815f875af1925050508015610cd9575060408051601f3d908101601f19168201909252610cd691810190611819565b60015b610d40573d808015610d06576040519150601f19603f3d011682016040523d82523d5f602084013e610d0b565b606091505b5080515f03610d3857604051633250574960e11b81526001600160a01b0385166004820152602401610420565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610d7c57604051633250574960e11b81526001600160a01b0385166004820152602401610420565b505b5050505050565b60605f610d9183610fbf565b60010190505f8167ffffffffffffffff811115610db057610db0611531565b6040519080825280601f01601f191660200182016040528015610dda576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610de457509392505050565b8080610e3657506001600160a01b03821615155b15610f15575f610e45846109f1565b90506001600160a01b03831615801590610e715750826001600160a01b0316816001600160a01b031614155b8015610ea257506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b15610ecb5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610420565b8115610f135783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610f4f8383836110a0565b6104a3576001600160a01b038316610f7d57604051637e27328960e01b815260048101829052602401610420565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610420565b610fb28383611123565b6104a3335f858585610c5d565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611007577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611033576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061105157662386f26fc10000830492506010015b6305f5e1008310611069576305f5e100830492506008015b612710831061107d57612710830492506004015b6064831061108f576064830492506002015b600a83106103305760010192915050565b5f6001600160a01b0383161580159061111b5750826001600160a01b0316846001600160a01b031614806110f857506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b8061111b57505f828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b03821661114c57604051633250574960e11b81525f6004820152602401610420565b5f61115883835f610a36565b90506001600160a01b038116156104a3576040516339e3563760e11b81525f6004820152602401610420565b828054828255905f5260205f209081019282156111d7579160200282015b828111156111d757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906111a2565b506111e39291506111e7565b5090565b5b808211156111e3575f81556001016111e8565b6001600160e01b0319811681146109ee575f5ffd5b5f60208284031215611220575f5ffd5b81356109ad816111fb565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6109ad602083018461122b565b5f6020828403121561127b575f5ffd5b5035919050565b80356001600160a01b0381168114611298575f5ffd5b919050565b5f5f604083850312156112ae575f5ffd5b6112b783611282565b946020939093013593505050565b5f5f5f606084860312156112d7575f5ffd5b6112e084611282565b92506112ee60208501611282565b929592945050506040919091013590565b5f6020828403121561130f575f5ffd5b6109ad82611282565b5f5f60408385031215611329575f5ffd5b61133283611282565b915060208301358015158114611346575f5ffd5b809150509250929050565b60208152815160208201525f602083015160a0604084015261137660c084018261122b565b90506040840151601f19848303016060850152611393828261122b565b6060860151858203601f190160808701528051808352602091820194505f93509101905b808310156113e3576001600160a01b0384511682526020820191506020840193506001830192506113b7565b50608086015167ffffffffffffffff811660a0870152925095945050505050565b5f5f83601f840112611414575f5ffd5b50813567ffffffffffffffff81111561142b575f5ffd5b602083019150836020828501011115611442575f5ffd5b9250929050565b5f5f5f5f5f5f5f5f60a0898b031215611460575f5ffd5b61146989611282565b975060208901359650604089013567ffffffffffffffff81111561148b575f5ffd5b6114978b828c01611404565b909750955050606089013567ffffffffffffffff8111156114b6575f5ffd5b6114c28b828c01611404565b909550935050608089013567ffffffffffffffff8111156114e1575f5ffd5b8901601f81018b136114f1575f5ffd5b803567ffffffffffffffff811115611507575f5ffd5b8b60208260051b840101111561151b575f5ffd5b989b979a50959850939692959194602001935050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f60808587031215611558575f5ffd5b61156185611282565b935061156f60208601611282565b925060408501359150606085013567ffffffffffffffff811115611591575f5ffd5b8501601f810187136115a1575f5ffd5b803567ffffffffffffffff8111156115bb576115bb611531565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156115ea576115ea611531565b604052818152828201602001891015611601575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b5f5f60408385031215611633575f5ffd5b61163c83611282565b915061164a60208401611282565b90509250929050565b600181811c9082168061166757607f821691505b60208210810361168557634e487b7160e01b5f52602260045260245ffd5b50919050565b5f600182016116a857634e487b7160e01b5f52601160045260245ffd5b5060010190565b601f8211156104a357805f5260205f20601f840160051c810160208510156116d45750805b601f840160051c820191505b81811015610d7e575f81556001016116e0565b815167ffffffffffffffff81111561170d5761170d611531565b6117218161171b8454611653565b846116af565b6020601f821160018114611753575f831561173c5750848201515b5f19600385901b1c1916600184901b178455610d7e565b5f84815260208120601f198516915b828110156117825787850151825560209485019460019092019101611762565b508482101561179f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f81518060208401855e5f93019283525090919050565b5f61111b6117d383866117ae565b846117ae565b6001600160a01b03851681526001600160a01b0384166020820152826040820152608060608201525f61180f608083018461122b565b9695505050505050565b5f60208284031215611829575f5ffd5b81516109ad816111fb56fea164736f6c634300081b000a";

type LyricsNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LyricsNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LyricsNFT__factory extends ContractFactory {
  constructor(...args: LyricsNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LyricsNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LyricsNFT__factory {
    return super.connect(runner) as LyricsNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LyricsNFTInterface {
    return new Interface(_abi) as LyricsNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LyricsNFT {
    return new Contract(address, _abi, runner) as unknown as LyricsNFT;
  }
}
