/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VoteContract,
  VoteContractInterface,
} from "../../contracts/VoteContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "versionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
    ],
    name: "VotingClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "versions",
        type: "uint256[]",
      },
    ],
    name: "VotingOpened",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
    ],
    name: "closeVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "versionId",
        type: "uint256",
      },
    ],
    name: "getEncryptedVotes",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "versionIds",
        type: "uint256[]",
      },
    ],
    name: "openVoting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "versionId",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "oneExt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "voteForVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b610af4806101975f395ff3fe608060405234801561000f575f5ffd5b5060043610610064575f3560e01c8063d2111a721161004d578063d2111a72146100bb578063d950bb20146100ce578063da1f12ab146100e1575f5ffd5b806346d7c7c714610068578063541c59ed1461007d575b5f5ffd5b61007b6100763660046108a6565b6100e9565b005b6100a961008b36600461092d565b5f918252602082815260408084209284526001909201905290205490565b60405190815260200160405180910390f35b61007b6100c936600461094d565b610337565b61007b6100dc366004610964565b6103e3565b6127116100a9565b5f8581526020819052604090205485901580159061011857505f8181526020819052604090206004015460ff16155b6101545760405162461bcd60e51b81526020600482015260086024820152672737ba1037b832b760c11b60448201526064015b60405180910390fd5b5f86815260208181526040808320338452600281019092529091205460ff16156101c05760405162461bcd60e51b815260206004820152600d60248201527f416c726561647920766f74656400000000000000000000000000000000000000604482015260640161014b565b5f805b600383015481101561020457878360030182815481106101e5576101e56109de565b905f5260205f200154036101fc5760019150610204565b6001016101c3565b50806102525760405162461bcd60e51b815260206004820152600b60248201527f4261642076657273696f6e000000000000000000000000000000000000000000604482015260640161014b565b5f6102928787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061049192505050565b5f8981526001850160205260409020549091506102af81836104a5565b5f8a8152600186016020526040902081905590506102cc816104d3565b506102d781336104e2565b50335f818152600286016020908152604091829020805460ff1916600117905590519182528a918c917fd91ecafccf238642dccd41161308b3eebe62a12bc5819daf5164780c221ec95b910160405180910390a350505050505050505050565b5f8181526020819052604090205481901580159061036657505f8181526020819052604090206004015460ff16155b61039d5760405162461bcd60e51b81526020600482015260086024820152672737ba1037b832b760c11b604482015260640161014b565b5f82815260208190526040808220600401805460ff191660011790555183917f8e9b46a70b3967bc9ea56ca61732c363a191fac88ae3ba011f4e030711c9011791a25050565b5f83815260208190526040902080541561043f5760405162461bcd60e51b815260206004820152600e60248201527f416c7265616479206f70656e6564000000000000000000000000000000000000604482015260640161014b565b838155610450600382018484610852565b50837f595cc76ad2f27c6d0bcc123eae39ac143fb15c29cc6e6ba258f9bef3c937a58584846040516104839291906109f2565b60405180910390a250505050565b5f61049e838360046104f4565b9392505050565b5f826104b7576104b45f610614565b92505b816104c8576104c55f610614565b91505b61049e83835f61062c565b5f6104de823061070c565b5090565b5f6104ed838361070c565b5090919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b9061056d908890339089908990600401610a62565b6020604051808303815f875af1158015610589573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105ad9190610abc565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156105f6575f5ffd5b505af1158015610608573d5f5f3e3d5ffd5b50505050509392505050565b5f6106268263ffffffff166004610795565b92915050565b5f5f821561063f5750600160f81b610642565b505f5b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700600181015460405163022f65e760e31b815260048101899052602481018890527fff00000000000000000000000000000000000000000000000000000000000000851660448201529192506001600160a01b03169063117b2f38906064016020604051808303815f875af11580156106de573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107029190610abc565b9695505050505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b15801561077a575f5ffd5b505af115801561078c573d5f5f3e3d5ffd5b50505050505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb9061080a9087908790600401610ad3565b6020604051808303815f875af1158015610826573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061084a9190610abc565b949350505050565b828054828255905f5260205f2090810192821561088b579160200282015b8281111561088b578235825591602001919060010190610870565b506104de9291505b808211156104de575f8155600101610893565b5f5f5f5f5f608086880312156108ba575f5ffd5b853594506020860135935060408601359250606086013567ffffffffffffffff8111156108e5575f5ffd5b8601601f810188136108f5575f5ffd5b803567ffffffffffffffff81111561090b575f5ffd5b88602082840101111561091c575f5ffd5b959894975092955050506020019190565b5f5f6040838503121561093e575f5ffd5b50508035926020909101359150565b5f6020828403121561095d575f5ffd5b5035919050565b5f5f5f60408486031215610976575f5ffd5b83359250602084013567ffffffffffffffff811115610993575f5ffd5b8401601f810186136109a3575f5ffd5b803567ffffffffffffffff8111156109b9575f5ffd5b8660208260051b84010111156109cd575f5ffd5b939660209190910195509293505050565b634e487b7160e01b5f52603260045260245ffd5b602081528160208201525f7f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610a29575f5ffd5b8260051b80856040850137919091016040019392505050565b60548110610a5e57634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f830116840101915050610ab36060830184610a42565b95945050505050565b5f60208284031215610acc575f5ffd5b5051919050565b8281526040810161049e6020830184610a4256fea164736f6c634300081b000a";

type VoteContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VoteContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VoteContract__factory extends ContractFactory {
  constructor(...args: VoteContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VoteContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VoteContract__factory {
    return super.connect(runner) as VoteContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoteContractInterface {
    return new Interface(_abi) as VoteContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VoteContract {
    return new Contract(address, _abi, runner) as unknown as VoteContract;
  }
}
