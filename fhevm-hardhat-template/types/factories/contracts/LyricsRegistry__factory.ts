/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LyricsRegistry,
  LyricsRegistryInterface,
} from "../../contracts/LyricsRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "collaborators",
        type: "address[]",
      },
    ],
    name: "CollaboratorsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newLyricsCID",
        type: "string",
      },
    ],
    name: "LyricsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "lyricsCID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "melodyCID",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isCollaborative",
        type: "bool",
      },
    ],
    name: "SongCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "lyricsCID",
        type: "string",
      },
      {
        internalType: "string",
        name: "melodyCID",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isCollaborative",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "initialCollaborators",
        type: "address[]",
      },
    ],
    name: "createSong",
    outputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
    ],
    name: "getSong",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "lyricsCID",
            type: "string",
          },
          {
            internalType: "string",
            name: "melodyCID",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isCollaborative",
            type: "bool",
          },
          {
            internalType: "address[]",
            name: "collaborators",
            type: "address[]",
          },
          {
            internalType: "uint64",
            name: "createdAt",
            type: "uint64",
          },
        ],
        internalType: "struct LyricsRegistry.Song",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextSongId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "collaborators",
        type: "address[]",
      },
    ],
    name: "setCollaborators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newLyricsCID",
        type: "string",
      },
    ],
    name: "updateLyrics",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260015f553480156012575f5ffd5b50610cce806100205f395ff3fe608060405234801561000f575f5ffd5b5060043610610064575f3560e01c8063483115bc1161004d578063483115bc146100a657806394f653af146100b9578063e1589381146100da575f5ffd5b8063058df7851461006857806342acaa661461007d575b5f5ffd5b61007b610076366004610761565b6100e2565b005b61009061008b3660046107a9565b6101a1565b60405161009d9190610831565b60405180910390f35b61007b6100b4366004610945565b6104d2565b6100cc6100c7366004610980565b61057e565b60405190815260200161009d565b6100cc5f5481565b5f838152600160208190526040909120015483906001600160a01b031633146101455760405162461bcd60e51b815260206004820152601060248201526f2737ba1039b7b7339031b932b0ba37b960811b60448201526064015b60405180910390fd5b5f848152600160205260409020610160906006018484610697565b50837f8bcf3941a302c86f01840c9256f9b415b7d81fca1e17e2d326f66f580cec28e28484604051610193929190610a66565b60405180910390a250505050565b6101fa6040518061010001604052805f81526020015f6001600160a01b031681526020016060815260200160608152602001606081526020015f15158152602001606081526020015f67ffffffffffffffff1681525090565b5f82815260016020819052604090912001546001600160a01b03166102615760405162461bcd60e51b815260206004820152600e60248201527f536f6e67206e6f7420666f756e64000000000000000000000000000000000000604482015260640161013c565b5f8281526001602081815260409283902083516101008101855281548152928101546001600160a01b03169183019190915260028101805492939192918401916102aa90610ab6565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690610ab6565b80156103215780601f106102f857610100808354040283529160200191610321565b820191905f5260205f20905b81548152906001019060200180831161030457829003601f168201915b5050505050815260200160038201805461033a90610ab6565b80601f016020809104026020016040519081016040528092919081815260200182805461036690610ab6565b80156103b15780601f10610388576101008083540402835291602001916103b1565b820191905f5260205f20905b81548152906001019060200180831161039457829003601f168201915b505050505081526020016004820180546103ca90610ab6565b80601f01602080910402602001604051908101604052809291908181526020018280546103f690610ab6565b80156104415780601f1061041857610100808354040283529160200191610441565b820191905f5260205f20905b81548152906001019060200180831161042457829003601f168201915b5050509183525050600582015460ff16151560208083019190915260068301805460408051828502810185018252828152940193928301828280156104ad57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161048f575b50505091835250506007919091015467ffffffffffffffff1660209091015292915050565b5f838152600160208190526040909120015483906001600160a01b031633146105305760405162461bcd60e51b815260206004820152601060248201526f2737ba1039b7b7339031b932b0ba37b960811b604482015260640161013c565b5f84815260016020526040902060030161054b838583610b4e565b50837f9b86fbd7d37163080a4c7f34794f6776f20ed5e76e27f584090f7d16ef1f762e8484604051610193929190610c30565b5f8054818061058c83610c4b565b909155505f818152600160208190526040909120828155908101805473ffffffffffffffffffffffffffffffffffffffff191633179055909150600281016105d58b8d83610b4e565b50600381016105e5898b83610b4e565b50600481016105f5878983610b4e565b5060058101805460ff191686151517905560078101805467ffffffffffffffff19164267ffffffffffffffff16179055821561063b57610639600682018585610697565b505b336001600160a01b0316827f85a47f8c25dfa65c28ad82bf3ec94c76d6a07afd0fe36c9101a138269e18685a8d8d8d8d8d8d8d6040516106819796959493929190610c6f565b60405180910390a3509998505050505050505050565b828054828255905f5260205f209081019282156106f5579160200282015b828111156106f557815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038435161782556020909201916001909101906106b5565b50610701929150610705565b5090565b5b80821115610701575f8155600101610706565b5f5f83601f840112610729575f5ffd5b50813567ffffffffffffffff811115610740575f5ffd5b6020830191508360208260051b850101111561075a575f5ffd5b9250929050565b5f5f5f60408486031215610773575f5ffd5b83359250602084013567ffffffffffffffff811115610790575f5ffd5b61079c86828701610719565b9497909650939450505050565b5f602082840312156107b9575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b5f8151808452602084019350602083015f5b828110156108275781516001600160a01b0316865260209586019590910190600101610800565b5093949350505050565b60208152815160208201525f602083015161085760408401826001600160a01b03169052565b50604083015161010060608401526108736101208401826107c0565b90506060840151601f1984830301608085015261089082826107c0565b9150506080840151601f198483030160a08501526108ae82826107c0565b91505060a08401516108c460c085018215159052565b5060c0840151838203601f190160e08501526108e082826107ee565b91505060e08401516108ff61010085018267ffffffffffffffff169052565b509392505050565b5f5f83601f840112610917575f5ffd5b50813567ffffffffffffffff81111561092e575f5ffd5b60208301915083602082850101111561075a575f5ffd5b5f5f5f60408486031215610957575f5ffd5b83359250602084013567ffffffffffffffff811115610974575f5ffd5b61079c86828701610907565b5f5f5f5f5f5f5f5f5f60a08a8c031215610998575f5ffd5b893567ffffffffffffffff8111156109ae575f5ffd5b6109ba8c828d01610907565b909a5098505060208a013567ffffffffffffffff8111156109d9575f5ffd5b6109e58c828d01610907565b90985096505060408a013567ffffffffffffffff811115610a04575f5ffd5b610a108c828d01610907565b90965094505060608a01358015158114610a28575f5ffd5b925060808a013567ffffffffffffffff811115610a43575f5ffd5b610a4f8c828d01610719565b915080935050809150509295985092959850929598565b602080825281018290525f8360408301825b85811015610aac5782356001600160a01b038116808214610a97575f5ffd5b83525060209283019290910190600101610a78565b5095945050505050565b600181811c90821680610aca57607f821691505b602082108103610ae857634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52604160045260245ffd5b601f821115610b4957805f5260205f20601f840160051c81016020851015610b275750805b601f840160051c820191505b81811015610b46575f8155600101610b33565b50505b505050565b67ffffffffffffffff831115610b6657610b66610aee565b610b7a83610b748354610ab6565b83610b02565b5f601f841160018114610bab575f8515610b945750838201355b5f19600387901b1c1916600186901b178355610b46565b5f83815260208120601f198716915b82811015610bda5786850135825560209485019460019092019101610bba565b5086821015610bf6575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b602081525f610c43602083018486610c08565b949350505050565b5f60018201610c6857634e487b7160e01b5f52601160045260245ffd5b5060010190565b608081525f610c8260808301898b610c08565b8281036020840152610c9581888a610c08565b90508281036040840152610caa818688610c08565b91505082151560608301529897505050505050505056fea164736f6c634300081b000a";

type LyricsRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LyricsRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LyricsRegistry__factory extends ContractFactory {
  constructor(...args: LyricsRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LyricsRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LyricsRegistry__factory {
    return super.connect(runner) as LyricsRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LyricsRegistryInterface {
    return new Interface(_abi) as LyricsRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LyricsRegistry {
    return new Contract(address, _abi, runner) as unknown as LyricsRegistry;
  }
}
