/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RevenueSplit,
  RevenueSplitInterface,
} from "../../../contracts/RevenueSplit.sol/RevenueSplit";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Credited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Distributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "bps",
            type: "uint96",
          },
        ],
        indexed: false,
        internalType: "struct RevenueSplit.Share[]",
        name: "shares",
        type: "tuple[]",
      },
    ],
    name: "SharesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRevenue",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "bps",
            type: "uint96",
          },
        ],
        internalType: "struct RevenueSplit.Share[]",
        name: "shares",
        type: "tuple[]",
      },
    ],
    name: "setShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506109db8061001c5f395ff3fe60806040526004361061003e575f3560e01c8063187b890f1461004257806351cff8d914610063578063d4fac45d14610082578063f430950a146100b3575b5f5ffd5b34801561004d575f5ffd5b5061006161005c36600461071f565b6100c6565b005b34801561006e575f5ffd5b5061006161007d3660046107ad565b610217565b34801561008d575f5ffd5b506100a161009c3660046107cf565b61040a565b60405190815260200160405180910390f35b6100616100c1366004610806565b610436565b5f8381526020819052604081206100dc916106e9565b5f805b8281101561017f575f8581526020819052604090208484838181106101065761010661083b565b83546001810185555f9485526020909420604090910292909201929190910190506101318282610868565b50508383828181106101455761014561083b565b905060400201602001602081019061015d91906108ca565b610175906bffffffffffffffffffffffff16836108f9565b91506001016100df565b506127108111156101d75760405162461bcd60e51b815260206004820152600860248201527f6270733e3130302500000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b837fc867de148def4d3ae1616f189479e02de9b9d5ae5995a16dfd902c8fadf97eb3848460405161020992919061090c565b60405180910390a250505050565b335f9081526001602090815260408083206001600160a01b0385168452909152902054806102875760405162461bcd60e51b815260206004820152600a60248201527f6e6f2062616c616e63650000000000000000000000000000000000000000000060448201526064016101ce565b335f9081526001602090815260408083206001600160a01b038616808552925282209190915561034c576040515f90339083908381818185875af1925050503d805f81146102f0576040519150601f19603f3d011682016040523d82523d5f602084013e6102f5565b606091505b50509050806103465760405162461bcd60e51b815260206004820152601360248201527f657468207472616e73666572206661696c65640000000000000000000000000060448201526064016101ce565b506103c2565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303815f875af1158015610396573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ba9190610979565b6103c2575f5ffd5b604080516001600160a01b03841681526020810183905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a25050565b6001600160a01b038083165f908152600160209081526040808320938516835292905220545b92915050565b6001600160a01b038216610498578034146104935760405162461bcd60e51b815260206004820152600d60248201527f626164206d73672e76616c75650000000000000000000000000000000000000060448201526064016101ce565b610514565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303815f875af11580156104e8573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061050c9190610979565b610514575f5ffd5b5f838152602081905260409020805461056f5760405162461bcd60e51b815260206004820152600960248201527f6e6f20736861726573000000000000000000000000000000000000000000000060448201526064016101ce565b5f5b81548110156106a7575f6127108383815481106105905761059061083b565b5f918252602090912001546105cb907401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1686610998565b6105d591906109af565b90508060015f8585815481106105ed576105ed61083b565b5f9182526020808320909101546001600160a01b0390811684528382019490945260409283018220938a16825292909252812080549091906106309084906108f9565b925050819055508282815481106106495761064961083b565b5f9182526020918290200154604080516001600160a01b038981168252938101859052929091169188917f6867a11798bc02f7c6aaf063395792304982139e2fe7bc5a6605cfd742afa771910160405180910390a350600101610571565b50604080516001600160a01b03851681526020810184905285917fa7932e9c92f31e1ed56b29d00bbe669a97484dc24de28dd9c8c0429df7f358479101610209565b5080545f8255905f5260205f20908101906107049190610707565b50565b5b8082111561071b575f8155600101610708565b5090565b5f5f5f60408486031215610731575f5ffd5b83359250602084013567ffffffffffffffff81111561074e575f5ffd5b8401601f8101861361075e575f5ffd5b803567ffffffffffffffff811115610774575f5ffd5b8660208260061b8401011115610788575f5ffd5b939660209190910195509293505050565b6001600160a01b0381168114610704575f5ffd5b5f602082840312156107bd575f5ffd5b81356107c881610799565b9392505050565b5f5f604083850312156107e0575f5ffd5b82356107eb81610799565b915060208301356107fb81610799565b809150509250929050565b5f5f5f60608486031215610818575f5ffd5b83359250602084013561082a81610799565b929592945050506040919091013590565b634e487b7160e01b5f52603260045260245ffd5b6bffffffffffffffffffffffff81168114610704575f5ffd5b813561087381610799565b6001600160a01b03811690508073ffffffffffffffffffffffffffffffffffffffff1983541617825560208301356108aa8161084f565b60a01b73ffffffffffffffffffffffffffffffffffffffff191617905550565b5f602082840312156108da575f5ffd5b81356107c88161084f565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610430576104306108e5565b602080825281018290525f8360408301825b8581101561096f57823561093181610799565b6001600160a01b03168252602083013561094a8161084f565b6bffffffffffffffffffffffff1660208301526040928301929091019060010161091e565b5095945050505050565b5f60208284031215610989575f5ffd5b815180151581146107c8575f5ffd5b8082028115828204841417610430576104306108e5565b5f826109c957634e487b7160e01b5f52601260045260245ffd5b50049056fea164736f6c634300081b000a";

type RevenueSplitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevenueSplitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevenueSplit__factory extends ContractFactory {
  constructor(...args: RevenueSplitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RevenueSplit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RevenueSplit__factory {
    return super.connect(runner) as RevenueSplit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevenueSplitInterface {
    return new Interface(_abi) as RevenueSplitInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RevenueSplit {
    return new Contract(address, _abi, runner) as unknown as RevenueSplit;
  }
}
