/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LikeRegistry,
  LikeRegistryInterface,
} from "../../contracts/LikeRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Liked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Unliked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isLiked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
    ],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "likeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "songId",
        type: "uint256",
      },
    ],
    name: "unlike",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5061039c8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610064575f3560e01c806365efeef41161004d57806365efeef4146100d457806374d21ae0146100e7578063e82935da146100fc575f5ffd5b806302c42787146100685780631892b044146100a7575b5f5ffd5b6100926100763660046102f8565b5f60208181529281526040808220909352908152205460ff1681565b60405190151581526020015b60405180910390f35b6100c66100b536600461033e565b60016020525f908152604090205481565b60405190815260200161009e565b6100926100e23660046102f8565b61010f565b6100fa6100f536600461033e565b610146565b005b6100fa61010a36600461033e565b61021f565b5f8281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff165b92915050565b5f8181526020818152604080832033845290915290205460ff166101b15760405162461bcd60e51b815260206004820152600960248201527f6e6f74206c696b6564000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b5f818152602081815260408083203384528252808320805460ff1916905583835260019182905282208054919290916101eb908490610369565b9091555050604051339082907fcaadb8eaa8eea76230cccab7fb207c387f40489b1ce59b8dc6e51a5e584e3f58905f90a350565b5f8181526020818152604080832033845290915290205460ff16156102865760405162461bcd60e51b815260206004820152600d60248201527f616c7265616479206c696b65640000000000000000000000000000000000000060448201526064016101a8565b5f818152602081815260408083203384528252808320805460ff191660019081179091558484529182905282208054919290916102c490849061037c565b9091555050604051339082907f6790e8ded18c25977540ba89bbcefd83da7fbe624085856758cf343178c4d612905f90a350565b5f5f60408385031215610309575f5ffd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff81168114610333575f5ffd5b809150509250929050565b5f6020828403121561034e575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561014057610140610355565b808201808211156101405761014061035556fea164736f6c634300081b000a";

type LikeRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LikeRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LikeRegistry__factory extends ContractFactory {
  constructor(...args: LikeRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LikeRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LikeRegistry__factory {
    return super.connect(runner) as LikeRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LikeRegistryInterface {
    return new Interface(_abi) as LikeRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LikeRegistry {
    return new Contract(address, _abi, runner) as unknown as LikeRegistry;
  }
}
